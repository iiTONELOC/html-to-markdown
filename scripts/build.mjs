import * as fs from 'fs';
import { execSync } from 'child_process';

// synchronously execute the command and return the output
function execute(command) {
    return execSync(command, (err, stdout, stderr) => {
        if (err) {
            process.stderr.write(`${stderr} \n`);
            return;
        }
        process.stdout.write(`${stdout} \n`);
        process.stdout.write(`${stdout} \n`);
    });
}

try {
    // run the eslint command to check for any linting errors
    execute('eslint src/**/*.ts');

    // then delete the dist folder if it exists
    if (fs.existsSync('dist')) {
        fs.rmdirSync('dist', { recursive: true });
    }

    // then create a new dist folder
    fs.mkdirSync('dist');

    // compile the typescript files
    execute('tsc');

    // run rollup to bundle the javascript files generated by tsc
    execute('rollup -c');

    // create the css using tailwindcss
    execute('npx tailwindcss -i public/css/style.css -o dist/public/assets/css/style.css');

    // copy the public/assets folder to the dist/public folder
    fs.cpSync('public/assets', 'dist/public/assets', { recursive: true });

    // copy the index.html file from the src folder to the dist folder
    fs.copyFileSync('src/index.html', 'dist/index.html');

    process.stdout.write(`Build successful\n`);
    process.exit(0);
} catch (error) {
    process.stderr.write(`${error} \n`);
    process.exit(1);
}
